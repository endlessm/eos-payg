[Unit]
Description=Pay As You Go Daemon
Documentation=man:eos-paygd(8)
# We don't want default dependencies since we want Before=basic.target
DefaultDependencies=no
# Only run from initrd
ConditionPathExists=/etc/initrd-release
# Only run on Phase 4 systems
ConditionKernelCommandLine=eospayg
# Don't complete boot without this running
FailureAction=poweroff
# We used to start earlier in an effort to reduce the chance the user is dropped to a
# shell before we started - but that leaves us with a weird race condition that can
# sometimes lead to chroot()ing to a place where dbus doesn't exist.
#
# initrd-parse-etc.service appears to be the place where untrusted actions start, as
# fstab mounts with the x-initrd.mount option happen shortly afterwards. We need to
# ensure we start before that point.
#
# This puts us starting after the main fs has been checked, so there's a chance to
# drop to a root shell before eos-paygd starts. We'll have to solve that somewhere
# else for now.
After=initrd-root-fs.target
Before=initrd-parse-etc.service
Conflicts=shutdown.target
# We need IgnoreOnIsolate to prevent systemd from trying to shut us down during
# the root pivot. This is independent of the tricks in the daemon itself to avoid
# the pivot killing spree.
IgnoreOnIsolate=true

[Service]
ExecStart=@libexecdir@/eos-paygd1
# Type=dbus would make sense except that D-Bus isn't available in the initrd
Type=notify
NotifyAccess=main
# We must be root to avoid systemd's post-root-pivot killing spree
# and to make the eMMC boot partition writable
User=root

# Sandboxing
# We need access to /dev/watchdog and /dev/mmcblkxboot0 at least
DevicePolicy=auto
Environment=GIO_USE_VFS=local
Environment=GVFS_DISABLE_FUSE=1
Environment=GVFS_REMOTE_VOLUME_MONITOR_IGNORE=1
Environment=GSETTINGS_BACKEND=memory
MemoryDenyWriteExecute=yes
NoNewPrivileges=yes
PrivateNetwork=yes
# PrivateMounts must be explicitly set to no, even though that is the default
# because PrivateNetwork=yes implicitly implies PrivateMounts=yes.
PrivateMounts=no
# Commented out sandboxing settings below this point that start with a -
# have been tested to break our chroot() and are left here to save future
# generations from accidentally turning them on.
#-PrivateTmp=yes
# We need PrivateUsers=no to be able to chown /var/lib/eos-payg
PrivateUsers=no
#-ProtectControlGroups=yes
#-ProtectHome=yes
#-ProtectKernelModules=yes
# ProtectKernelTunables=yes would keep us from writing to /sys/block/mmcblk0boot0/force_ro
ProtectKernelTunables=no
#-ProtectSystem=full
RestrictAddressFamilies=AF_UNIX
RestrictRealtime=yes
SystemCallErrorNumber=EPERM
# @mount must not be in the filter, as that group of syscalls includes chroot()
SystemCallFilter=~@clock @cpu-emulation @debug @keyring @module @obsolete @raw-io @resources
SystemCallArchitectures=native
