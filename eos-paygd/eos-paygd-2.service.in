[Unit]
Description=Pay As You Go Daemon
Documentation=man:eos-paygd(8)
# We don't want default dependencies since we want Before=basic.target
DefaultDependencies=no
# Only run from initrd
ConditionPathExists=/etc/initrd-release
# Only run on Phase 4 systems
ConditionKernelCommandLine=eospayg
# Don't complete boot without this running
FailureAction=poweroff
# Start early to reduce the chance the user is dropped to a shell before we've started
After=sysinit.target
Before=basic.target
Conflicts=shutdown.target

[Service]
ExecStart=@libexecdir@/eos-paygd1
# Type=dbus would make sense except that D-Bus isn't available in the initrd
Type=notify
NotifyAccess=main
# We must be root to avoid systemd's post-root-pivot killing spree
# and to make the eMMC boot partition writable
User=root
# Set KillMode and SendSIGKILL such that we're not stopped along with the associated target
KillMode=none
SendSIGKILL=no

# Sandboxing
# We need access to /dev/watchdog and /dev/mmcblkxboot0 at least
DevicePolicy=auto
Environment=GIO_USE_VFS=local
Environment=GVFS_DISABLE_FUSE=1
Environment=GVFS_REMOTE_VOLUME_MONITOR_IGNORE=1
Environment=GSETTINGS_BACKEND=memory
MemoryDenyWriteExecute=yes
NoNewPrivileges=yes
PrivateNetwork=yes
PrivateTmp=yes
# We need PrivateUsers=no to be able to chown /var/lib/eos-payg
PrivateUsers=no
ProtectControlGroups=yes
ProtectHome=yes
ProtectKernelModules=yes
# ProtectKernelTunables=yes would keep us from writing to /sys/block/mmcblk0boot0/force_ro
ProtectKernelTunables=no
ProtectSystem=full
RestrictAddressFamilies=AF_UNIX
RestrictRealtime=yes
SystemCallErrorNumber=EPERM
SystemCallFilter=~@clock @cpu-emulation @debug @keyring @module @mount @obsolete @raw-io @resources
SystemCallArchitectures=native
